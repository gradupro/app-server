name: CI/CD Docker

on:
  pull_request:
    branches: ["main"]

env:
  VERSION: ${{ github.sha }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }} # runner 설정에서 읽어들일거에요.
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        id: docker_build
        uses: docker/bake-action@v3
        with:
          files: docker-compose.yml
          builder: ${{ steps.buildx.outputs.name }}
          push: true
      - name: Copy a folder to s3
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_region: ap-northeast-2
          source: "docker-compose.yml"
          dest: s3://${{secrets.AWS_BUCKET_NAME}}/

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, application-server]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Remove Docker Compose file
        run: |
          rm -f docker-compose.yml
      - name: Copy a file to s3
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_region: ap-northeast-2
          source: s3://${{secrets.AWS_BUCKET_NAME}}/docker-compose.yml
          dest: "/home/ec2-user/"
      - name: Docker run
        run: |
          docker rmi $(docker images -q) | docker-compose down --volumes | docker-compose up -d
