worker_processes  auto;

events {
  worker_connections 1024;
  multi_accept on;
  use epoll;
  accept_mutex on;
}

http {
  # Nginx will handle gzip compression of responses from the app server

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  gzip on;
  gzip_disable "msie6";
  gzip_min_length 10240;
  gzip_buffers 32 32k;
  gzip_comp_level 9;
  gzip_proxied any;
  gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
  gzip_vary on;

  fastcgi_buffers 8 16k;
  fastcgi_buffer_size 32k;
  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;

  client_max_body_size 8M;

  keepalive_timeout 65;
  
  upstream app {
    server emerdy-app-container:3000;
  }

  upstream chat {
    server emerdy-app-container:3030;
  }
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  error_log /var/log/nginx/error.log;

  server {
    listen 80;
    #listen [::]:80;

    #proxy_set_header X-Forwarded-Proto $scheme;
    #if ($http_x_forwarded_proto != 'https') {
    #return 301 https://$host$request_uri;
    #}

    location /nginx_status {
            stub_status on;
            access_log off;
            allow all;
    }
    # Nginx will reject anything not matching /api
    location /api/ {
      autoindex_localtime on;
      # Only requests matching the whitelist expectations will
      # get sent to the application server
      proxy_pass http://app/;
      proxy_redirect off;
      proxy_buffer_size          128k;
      proxy_buffers              4 256k;
      proxy_busy_buffers_size    256k;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
    }

    # websocket reverse proxy
    location ^~ /socket {
      proxy_buffer_size          128k;
      proxy_buffers              4 256k;
      proxy_busy_buffers_size    256k;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy false;

      proxy_pass http://chat;
      proxy_redirect off;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }
}